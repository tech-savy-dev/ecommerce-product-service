version: 0.2

env:
  variables:
    DOMAIN: "ecommerce-domain"
    REPO: "ecommerce-shared"
    REGION: "ap-southeast-1"
    ECR_REPO_NAME: "dev-ecommerce-product-service"

phases:
  install:
    runtime-versions:
      java: corretto21
    commands:
      - echo "[INSTALL] Getting AWS caller identity..."
      - aws sts get-caller-identity
      - echo "[INSTALL] Extracting AWS Account ID..."
      - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - export EXECUTION_ROLE_ARN="arn:aws:iam::$AWS_ACCOUNT_ID:role/ecs-execution-role"
      - echo "[INSTALL] AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID"
      - echo "[INSTALL] EXECUTION_ROLE_ARN=$EXECUTION_ROLE_ARN"
      - echo "[INSTALL] Getting CodeArtifact auth token..."
      - export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain $DOMAIN --domain-owner $AWS_ACCOUNT_ID --region $REGION --query authorizationToken --output text)
      - mkdir -p ~/.m2
      - |
        cat > ~/.m2/settings.xml <<EOL
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0">
          <mirrors>
            <mirror>
              <id>codeartifact</id>
              <mirrorOf>*</mirrorOf>
              <url>https://${DOMAIN}-${AWS_ACCOUNT_ID}.d.codeartifact.${REGION}.amazonaws.com/maven/${REPO}/</url>
            </mirror>
          </mirrors>
          <servers>
            <server>
              <id>codeartifact</id>
              <username>aws</username>
              <password>${CODEARTIFACT_AUTH_TOKEN}</password>
            </server>
          </servers>
        </settings>
        EOL

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG"
      - echo "Image URI:" $IMAGE_URI

  build:
    commands:
      - echo Building Maven project with CodeArtifact...
      - mvn clean package -DskipTests -s ~/.m2/settings.xml
      - echo Building Docker image...
      - docker build -t $ECR_REPO_NAME:$IMAGE_TAG .
      - docker tag $ECR_REPO_NAME:$IMAGE_TAG $IMAGE_URI

  post_build:
    commands:
      - echo Pushing Docker image to ECR...
      - docker push $IMAGE_URI
      - echo Replacing image URI in taskdef.json...
      - sed -i "s|<IMAGE_URI>|$IMAGE_URI|" taskdef.json
      - sed -i "s|<EXECUTION_ROLE_ARN>|$EXECUTION_ROLE_ARN|" taskdef.json
      - echo Registering ECS task definition...
      - TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://taskdef.json --query 'taskDefinition.taskDefinitionArn' --output text)
      - echo "New task definition ARN:" $TASK_DEF_ARN
      - sed -i "s|<TASK_DEF_ARN>|$TASK_DEF_ARN|" appspec.yaml
      - echo $TASK_DEF_ARN > taskdef-arn.txt


artifacts:
  files:
    - taskdef.json
    - appspec.yaml
    - taskdef-arn.txt

